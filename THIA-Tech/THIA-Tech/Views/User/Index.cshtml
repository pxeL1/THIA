@model DataChangeViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Index";
}

@{
    var currentUser = await UserManager.GetUserAsync(User);
}



<div class="container container-fluid">

    <div class="row mt-3">

        <partial name="_UserMenu" />


        <div class="col-md-9 mb-4">
            <h3 class="text-center mt-3">Profile details</h3>
            <hr />
            <h4 class="mb-3">Personal information</h4>

            <form method="post" asp-route-change="data">
                <div class="form-group mb-3">
                    <h6>First name<span class="text-danger">*</span> </h6>
                    <input type="text" class="form-control" asp-for="FirstName" required="" value="@currentUser.FirstName" />
                </div>

                <div class="form-group mb-3">
                    <h6>Last name<span class="text-danger">*</span></h6>
                    <input type="text" class="form-control" asp-for="LastName" required="" value="@currentUser.LastName" />
                </div>

                <div class="form-group mb-2">
                    <h6>E-mail address<span class="text-danger">*</span></h6>
                    <input type="email" class="form-control" value="@currentUser.Email" asp-for="Email" required="" />
                </div>
                @if (ViewData.ModelState["emptyFields"] != null && ViewData.ModelState["emptyFields"].Errors.Any())
                {
                    <span class="text-danger d-block">Email already taken!</span>
                }

                <button class="btn btn-primary" type="submit">Save changes</button>

            </form>

            <h4 class="mt-5 mb-3">Change your password</h4>

            <form method="post" asp-route-change="password">
                <div class="form-group mb-3">
                    <h6>Old password<span class="text-danger">*</span></h6>
                    <input name="oldPass" type="password" class="form-control" asp-for="oldPass" required="" />
                    @if (ViewData.ModelState["oldPass"] != null && ViewData.ModelState["oldPass"].Errors.Any())
                    {
                        <span class="text-danger">Incorrect password</span>
                    }

                </div>
                <div class="form-group mb-3">
                    <h6>New password<span class="text-danger">*</span></h6>
                    <input name="newPass" type="password" class="form-control" asp-for="newPass" required="" />
                </div>
                <div class="form-group mb-3">
                    <h6>Repeat new password<span class="text-danger">*</span></h6>
                    <input name="repeatNew" type="password" class="form-control" asp-for="repeatNew" required="" />
                    @if (ViewData.ModelState["emptyPassFields"] != null && ViewData.ModelState["emptyPassFields"].Errors.Any())
                    {
                        <span class="text-danger d-block"> <span class="text-danger">*</span> fields can't be left empty'</span>
                    }
                    else if (ViewData.ModelState["repeatNew"] != null && ViewData.ModelState["repeatNew"].Errors.Any())
                    {
                        <span class="text-danger">Passwords must match</span>
                    }



                </div>
                <button class="btn btn-primary" type="submit">Save changes</button>
            </form>



        </div>

    </div>

</div>

